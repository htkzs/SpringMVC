文件下载
/**
 * @ClassName : DownloadHandler
 * @Description : 处理文件的下载  测试URL http://localhost:8080/springmvc/download
 * @Author : 20609
 * @Date: 2022/12/11  21:55
 */
@Controller
public class DownloadHandler {
    @RequestMapping("/download")
    public ResponseEntity<byte[]> download(HttpServletRequest request) {
        //1。得到要下载的文件的流
        //找到文件的真实路径
        ServletContext context = request.getServletContext();
        String path = context.getRealPath("/scripts/jquery-1.9.1.min.js");
        try {
            FileInputStream fileInputStream = new FileInputStream(path);
            byte[] bytes = new byte[fileInputStream.available()];
            fileInputStream.read(bytes);
            fileInputStream.close();
            HttpHeaders httpHeaders = new HttpHeaders();
            httpHeaders.set("Content-Disposition", "attachment;filename=jquery-1.9.1.min.js");
            //将下载的文件流返回 public ResponseEntity(@Nullable T body, @Nullable MultiValueMap<String, String> headers, HttpStatus status)
            return new ResponseEntity<byte[]>(bytes, httpHeaders, HttpStatus.OK);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
}

文件上传 ：
1.文件上传的表单准备
  <%@ page contentType="text/html;charset=UTF-8" language="java" %>
  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
  <%
      pageContext.setAttribute("cpt",request.getContextPath());
  %>
  <%=pageContext.getAttribute("cpt")%>

  <script type="text/javascript" src="scripts/jquery-1.9.1.min.js"></script>
  <html>

  <head>
      <title>file upload</title>
  </head>
  <body>
  <form method="post" action="<%=pageContext.getAttribute("cpt")%>/upload" enctype="multipart/form-data">
      用户名:<input type="text" name="username"/><br/>
      用户头像:<input type="file" name="headerImg"><br/>
      <input type="submit" value="上传提交"/>
  </form>
  ${pageContext.getAttribute("cpt")}
  </body>
  </html>
  核心在于指定 enctype="multipart/form-data"
2.导入相关依赖
        <!--导入文件上传的相关依赖-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
3.配置文件上传解析器 注意id必须为 multipartResolver
       <!--配置文件上传解析器-->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <property name="maxUploadSize" value="#{1024*1024*20}"/>
              <property name="defaultEncoding" value="utf-8"/>
       </bean>

4.单文件上传
       @Controller
       public class UploadHandler {
           @RequestMapping("/upload")
           public String fileUpload(@RequestParam("username") String userName,
                                    @RequestParam("headerImg") MultipartFile uploadFile, Model model){
               System.out.println("上传表单的字段名称为:"+uploadFile.getName());
               System.out.println("上传的文件名称为:"+uploadFile.getOriginalFilename());
               //保存文件
               try {
                   uploadFile.transferTo(new File("D:\\java web\\"+uploadFile.getOriginalFilename()));
                   model.addAttribute("msg","file upload success");
               } catch (IOException e) {
                   model.addAttribute("msg","file upload failure");
                   e.printStackTrace();
               }
               return "redirect:/success.jsp";
           }
       }



5.多文件上传

     @RequestMapping("/MultipleUpload")
        public String MultipleFileUpload(@RequestParam("username") String userName,
                                 @RequestParam("headerImg") MultipartFile[] uploadFiles, Model model){
            for(MultipartFile uploadFile:uploadFiles){
                System.out.println("上传表单的字段名称为:"+uploadFile.getName());
                System.out.println("上传的文件名称为:"+uploadFile.getOriginalFilename());
                //保存文件
                try {
                    uploadFile.transferTo(new File("D:\\java web\\"+uploadFile.getOriginalFilename()));
                    model.addAttribute("msg","file upload success");
                } catch (IOException e) {
                    model.addAttribute("msg","file upload failure");
                    e.printStackTrace();
                }
            }


            return "redirect:/success.jsp";
        }


