文件下载
/**
 * @ClassName : DownloadHandler
 * @Description : 处理文件的下载  测试URL http://localhost:8080/springmvc/download
 * @Author : 20609
 * @Date: 2022/12/11  21:55
 */
@Controller
public class DownloadHandler {
    @RequestMapping("/download")
    public ResponseEntity<byte[]> download(HttpServletRequest request) {
        //1。得到要下载的文件的流
        //找到文件的真实路径
        ServletContext context = request.getServletContext();
        String path = context.getRealPath("/scripts/jquery-1.9.1.min.js");
        try {
            FileInputStream fileInputStream = new FileInputStream(path);
            byte[] bytes = new byte[fileInputStream.available()];
            fileInputStream.read(bytes);
            fileInputStream.close();
            HttpHeaders httpHeaders = new HttpHeaders();
            httpHeaders.set("Content-Disposition", "attachment;filename=jquery-1.9.1.min.js");
            //将下载的文件流返回 public ResponseEntity(@Nullable T body, @Nullable MultiValueMap<String, String> headers, HttpStatus status)
            return new ResponseEntity<byte[]>(bytes, httpHeaders, HttpStatus.OK);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
}

文件下载：
1.文件上传的表单准备
2.导入相关依赖
        <!--导入文件上传的相关依赖-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
3.配置文件上传解析器 注意id必须为 multipartResolver
       <!--配置文件上传解析器-->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <property name="maxUploadSize" value="#{1024*1024*20}"/>
              <property name="defaultEncoding" value="utf-8"/>
       </bean>
